/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pharm;

import drugs.Bridge;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Jimma University
 */
public class EditRequest extends javax.swing.JFrame {

    /**
     * Creates new form EditRequest
     */
    String dname, unit, rqty, user;
    JTable table;
    ArrayList<String> drugs;
    int max_quantity;
    ArrayList<String> drugs_modified, selectedDrug;

    public EditRequest(String dname, String unit, String rqty, JTable table, ArrayList<String> drugs, int max_quantity, ArrayList<String> drugs_modified, ArrayList<String> selecteddrugs, String user) {
        this.dname = dname;
        this.unit = unit;
        this.rqty = rqty;
        this.table = table;
        this.drugs = drugs;
        this.max_quantity = max_quantity;
        this.drugs_modified = drugs_modified;
        this.selectedDrug = selecteddrugs;

        initComponents();

        this.user = user;
        username.setText("User: " + user);
        drug_name.setSelectedItem(dname);
        unitField.setSelectedItem(unit);
        qty.setText(rqty);

        for (int i = 0; i < drugs.size(); i++) {
            drug_name.addItem(drugs.get(i).split(",")[0]);
            drugs_modified.add(drugs.get(i).split(",")[0]);
        }

        AutoCompleteDecorator.decorate(drug_name);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        drug_name = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        unitField = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        qty = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        avalilable = new javax.swing.JLabel();
        username = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Edit Request");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Drug Name");

        drug_name.setEditable(true);
        drug_name.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                drug_nameItemStateChanged(evt);
            }
        });
        drug_name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                drug_nameFocusLost(evt);
            }
        });
        drug_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drug_nameActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Unit");

        unitField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        unitField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select", "bottle", "capsule", "cream", "box", "each", "gel", "lotion", "ointment", "pkt", "paste", "powder", "sachet", "strip", "solution", "suspension", "tablet", "tin", "tincture", "tube", "ampule", "vial", "bag", " " }));
        unitField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitFieldActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Quantity");

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        avalilable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        avalilable.setText(" ");

        username.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(300, Short.MAX_VALUE)
                .addComponent(username)
                .addGap(66, 66, 66))
            .addGroup(layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(avalilable, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(27, 27, 27)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(jLabel6))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(drug_name, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(unitField, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addContainerGap(27, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(username)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 148, Short.MAX_VALUE)
                .addComponent(avalilable, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(47, 47, 47)
                    .addComponent(jLabel5)
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(drug_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(12, 12, 12)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(unitField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addGap(11, 11, 11)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(27, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void drug_nameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_drug_nameItemStateChanged
        // TODO add your handling code here:
        String item = String.valueOf(drug_name.getSelectedItem());
        for (int i = 0; i < drugs.size(); i++) {
            String d = drugs.get(i).split(",")[0];
            System.out.println("......ddd...."+d);
            if (item.equals(d)) {
                avalilable.setText("Available = " + drugs.get(i).split("@")[1]);
                max_quantity = Integer.parseInt(drugs.get(i).split("@")[1]);
            }
        }
    }//GEN-LAST:event_drug_nameItemStateChanged

    private void drug_nameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_drug_nameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_drug_nameFocusLost

    private void drug_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drug_nameActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_drug_nameActionPerformed

    private void unitFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unitFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here: 
        removeItem(dname);

        int x;
        String drug = (String) drug_name.getSelectedItem();
        if (qty.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please mention quantity required");
            return;
        }
        if (Integer.parseInt(qty.getText()) > max_quantity) {
            JOptionPane.showMessageDialog(null, "Stock quantity is " + max_quantity);
            return;
        }

        if (unitField.getSelectedItem().equals("select")) {
            JOptionPane.showMessageDialog(null, "Please select unit of item");
            return;
        }

        if (drugs_modified.contains(drug)) {

            if (selectedDrug.contains(drug + "," + unitField.getSelectedItem() + "," + qty.getText())) {
                JOptionPane.showMessageDialog(null, "You have already selected this item");
                return;
            }

            Object[] row = {drug_name.getSelectedItem(), unitField.getSelectedItem(), qty.getText()};

            DefaultTableModel model = (DefaultTableModel) table.getModel();

            model.addRow(row);
            x = new Bridge().update_request(user, dname, (String) unitField.getSelectedItem(), Integer.parseInt(qty.getText()));
            selectedDrug.add(drug + "," + unitField.getSelectedItem() + "," + qty.getText());
            //            table.repaint();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Drug name should match from One of the options");
            return;
        }

        if (x == 1) {
            JOptionPane.showMessageDialog(null, "Data updated successfully");
            this.dispose();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new EditRequest().setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new EditRequest().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avalilable;
    private javax.swing.JComboBox<String> drug_name;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField qty;
    private javax.swing.JComboBox<String> unitField;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables
public void removeItem(String drugname) {
        int count = table.getRowCount();
        ArrayList<Object> list = new ArrayList<>();
        int r = table.getSelectedRow();
        for (int i = 0; i < count; i++) {

            String dname = (String) table.getValueAt(i, 0);
            String dnameS = (String) table.getValueAt(r, 0);

            Object[] row = {dname, table.getValueAt(i, 1), table.getValueAt(i, 2)};
            if (dname.equals(dnameS)) {

            } else {
                list.add(row);
            }

        }
        for (int i = 0; i < selectedDrug.size(); i++) {
            String dnameS = (String) table.getValueAt(r, 0);
            if (selectedDrug.get(i).split(",")[0].equals(dnameS)) {
                selectedDrug.remove(i);
            }
        }

        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        for (int i = 0; i < list.size(); i++) {
            model.addRow((Object[]) list.get(i));
        }

    }

}
