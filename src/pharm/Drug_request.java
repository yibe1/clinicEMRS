/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pharm;

import drugs.Bridge;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author YIBE
 */
public class Drug_request extends javax.swing.JFrame {

    /**
     * Creates new form Drug_request
     */
    ArrayList<String> drugs;
    ArrayList<String> drugs_modified = new ArrayList<>();
    ArrayList<String> selectedDrug = new ArrayList<>();
    String user;
    int max_quantity;
    private final ArrayList<String> unaproved_drugs;
    Dispensery_welcome ds;

    public Drug_request(String name, Dispensery_welcome ds){
        drugs = new Bridge().get_drugs();
        this.ds = ds;
        initComponents();
                this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                // Do activity here
                System.out.println("JFrame Closed!");
                ds.universal_lock = 0;
                ds.setEnabled(true);
            }
        });
        this.user = name;
        username.setText("User: " + name);
        drug_name.addItem("Start typing...");

        for (int i = 0; i < drugs.size(); i++) {
            drug_name.addItem(drugs.get(i).split("@")[0]);
            drugs_modified.add(drugs.get(i).split("@")[0]);
        }

        qty.setText("");
        AutoCompleteDecorator.decorate(drug_name);
        edit.setEnabled(false);
        delete.setEnabled(false);

        unaproved_drugs = new Bridge().getMy_unuproved_Requests(user);
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        for (int i = 0; i < unaproved_drugs.size(); i++) {
            System.out.println("unupp.."+unaproved_drugs.get(i));
            Object[] row = unaproved_drugs.get(i).split("@");
            String data = row[0] + "@" + row[1] + "@" + row[2];
            selectedDrug.add(data);
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        qty = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        drug_name = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        dep_name = new javax.swing.JComboBox<>();
        avalilable = new javax.swing.JLabel();
        edit = new javax.swing.JButton();
        delete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setType(java.awt.Window.Type.POPUP);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Drug Name");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Quantity");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Unit", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel1.setText(" List of requested drugs");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Drug Request Form");

        username.setText("User:");

        drug_name.setEditable(true);
        drug_name.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                drug_nameItemStateChanged(evt);
            }
        });
        drug_name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                drug_nameFocusLost(evt);
            }
        });
        drug_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drug_nameActionPerformed(evt);
            }
        });

        jLabel4.setText("Department");

        dep_name.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Student Clinic Dispensary", "Student Clinic Emergency" }));

        avalilable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        avalilable.setText(" ");

        edit.setText("Edit Selected");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        delete.setText("Remove Selected");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(drug_name, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dep_name, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(avalilable))
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(delete)
                        .addGap(34, 34, 34)
                        .addComponent(edit)
                        .addGap(158, 158, 158))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(username)
                        .addGap(121, 121, 121))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(username)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(drug_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(dep_name, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(avalilable))
                    .addComponent(jLabel6))
                .addGap(11, 11, 11)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void drug_nameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_drug_nameFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_drug_nameFocusLost

    private void drug_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drug_nameActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_drug_nameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        String drug = (String) drug_name.getSelectedItem();
        if (qty.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please mention quantity required");
            return;
        }
        if (dep_name.getSelectedItem().equals("Select")) {
            JOptionPane.showMessageDialog(null, "Please select your department");
            return;
        }
        if (Integer.parseInt(qty.getText()) > max_quantity) {
            JOptionPane.showMessageDialog(null, "Stock quantity is " + max_quantity);
            return;
        }


        if (drugs_modified.contains(drug)) {

            if (selectedDrug.contains(drug + "," + qty.getText())) {
                JOptionPane.showMessageDialog(null, "You have already selected this item");
                return;
            }

            String dname = (String) drug_name.getSelectedItem();
            String unit = dname.split("&")[1];
            Object[] row = {drug_name.getSelectedItem(),unit, qty.getText()};

            DefaultTableModel model = (DefaultTableModel) table.getModel();

            model.addRow(row);
            String sdrug = drug.split("&")[0] + "@" + unit+ "@" + qty.getText();
            selectedDrug.add(sdrug);
            int x = new Bridge().add_request(sdrug, user, (String) dep_name.getSelectedItem());
            if (x == 1) {
                JOptionPane.showMessageDialog(null, "Data was sent successfully");
            } else {
                JOptionPane.showMessageDialog(null, "Something went wrong. try again");
            }
//            table.repaint();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Drug name should match from One of the options");
            return;
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void drug_nameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_drug_nameItemStateChanged
        // TODO add your handling code here:
        String item = String.valueOf(drug_name.getSelectedItem());
        for (int i = 0; i < drugs.size(); i++) {
            String d = drugs.get(i).split("@")[0];
            if (item.equals(d)) {
                avalilable.setText("Available = " + drugs.get(i).split("@")[1]);
                System.out.println("Available = " + drugs.get(i).split("@")[1]);
                max_quantity = Integer.parseInt(drugs.get(i).split("@")[1]);
                break;
            }
        }
    }//GEN-LAST:event_drug_nameItemStateChanged

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:

        String dname = (String) table.getValueAt(table.getSelectedRow(), 0);
        String unit = (String) table.getValueAt(table.getSelectedRow(), 1);
        String rqty = (String) table.getValueAt(table.getSelectedRow(), 2);
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new EditRequest(dname, unit, rqty, table, drugs, max_quantity, drugs_modified, selectedDrug, user).setVisible(true);
            }
        });
    }//GEN-LAST:event_editActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        int count = table.getRowCount();
        ArrayList<Object> list = new ArrayList<>();
        int x = 0;
        for (int i = 0; i < count; i++) {
            int r = table.getSelectedRow();

            String dname = (String) table.getValueAt(i, 0);
            String dnameS = (String) table.getValueAt(r, 0);

            if (selectedDrug.get(i).split(",")[0].equals(dnameS)) {

                System.out.println("delete......" + dnameS + ".........." + user);
                x = new Bridge().remove_unaproved_request(dnameS, user);
                if (x == 1) {
                    selectedDrug.remove(i);
                }
            }
            Object[] row = {dname, table.getValueAt(i, 1), table.getValueAt(i, 2)};
            if (dname.equals(dnameS)) {

            } else {
                list.add(row);
            }

        }

        if (x == 1) {
            JOptionPane.showMessageDialog(null, "Data deleted successfuly");
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            for (int i = 0; i < list.size(); i++) {
                model.addRow((Object[]) list.get(i));
            }
        } else {
            JOptionPane.showMessageDialog(null, "Something went wrong try again later");
        }

    }//GEN-LAST:event_deleteActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        if (table.getSelectedRow() > -1) {
            edit.setEnabled(true);
            delete.setEnabled(true);
        }
    }//GEN-LAST:event_tableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Drug_request.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Drug_request.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Drug_request.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Drug_request.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Drug_request().setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Drug_request().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avalilable;
    private javax.swing.JButton delete;
    private javax.swing.JComboBox<String> dep_name;
    private javax.swing.JComboBox<String> drug_name;
    private javax.swing.JButton edit;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField qty;
    private javax.swing.JTable table;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables
}
